{
  "{\"sourceRoot\":\"/Users/justintew/Desktop/justin.digital_VARIATION1/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/justintew/Desktop/justin.digital_VARIATION1\",\"filename\":\"/Users/justintew/Desktop/justin.digital_VARIATION1/gulpfile.babel.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/justintew/Desktop/justin.digital_VARIATION1\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.2": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/justintew/Desktop/justin.digital_VARIATION1/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/justintew/Desktop/justin.digital_VARIATION1",
      "filename": "/Users/justintew/Desktop/justin.digital_VARIATION1/gulpfile.babel.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/Users/justintew/Desktop/justin.digital_VARIATION1",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/justintew/Desktop/justin.digital_VARIATION1/gulpfile.babel.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/justintew/Desktop/justin.digital_VARIATION1/gulpfile.babel.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/justintew/Desktop/justin.digital_VARIATION1/",
        "sourceFileName": "gulpfile.babel.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\n/**\n *   COMMON COMMANDS\n *   gulp                   Builds CSS and JS\n *   gulp build             Builds CSS and JS, same as gulp\n *   gulp watch             Watches for changes and starts BrowserSync on localhost:3000 (COMING SOON)\n *   gulp styles            Builds CSS\n *   gulp scripts           Build JS\n **/\n//SETUP\nvar gulp = require(\"gulp\");\n\nvar sass = require(\"gulp-sass\");\n\nvar cleanCSS = require(\"gulp-clean-css\");\n\nvar notify = require(\"gulp-notify\");\n\nvar babel = require(\"gulp-babel\");\n\nvar uglify = require(\"gulp-uglify\");\n\nvar concat = require(\"gulp-concat\"); // var browserSync = require('browser-sync').create();\n\n\nvar include = require(\"gulp-include\");\n\nvar del = require(\"del\");\n\nsass.compiler = require(\"node-sass\"); //CONFIGS\n\nvar projectURL = \"http://test-server:8888/\"; //change to your local dev server url\n\nvar paths = {\n  styles: {\n    src: \"src/scss/styles.scss\",\n    //entry point\n    dest: \"dist/css/\",\n    //exit point\n    watch: \"src/scss/*.scss\" //path to watch for changes\n\n  },\n  scripts: {\n    src: \"src/js/scripts.js\",\n    //entry point\n    dest: \"dist/js/\",\n    //exit point\n    watch: \"src/js/*.js\" //path to watch for changes\n\n  }\n};\n\nfunction clean() {\n  return del([\"dist\"]);\n} //styles function\n\n\nfunction styles() {\n  return gulp.src(paths.styles.src).pipe(sass().on(\"error\", sass.logError)).pipe(cleanCSS()).pipe(concat(\"styles.min.css\")).pipe(gulp.dest(paths.styles.dest)).pipe(notify({\n    message: \"Styles task complete\"\n  }));\n} //scripts function\n\n\nfunction scripts() {\n  return gulp.src(paths.scripts.src, {\n    sourcemaps: false\n  }).pipe(include({\n    includePaths: [__dirname + \"/node_modules\"]\n  })).pipe(babel()).pipe(uglify()).pipe(concat(\"scripts.min.js\")).pipe(gulp.dest(paths.scripts.dest)).pipe(notify({\n    message: \"Scripts task complete\"\n  }));\n} //watch function\n\n\nfunction watch() {\n  gulp.watch(paths.scripts.watch, scripts);\n  gulp.watch(paths.styles.watch, styles);\n} //serve function\n\n\nfunction serve() {} //browserSync STUFF\n//projectURL STUFF\n//build function\n\n\nvar build = gulp.series(clean, gulp.parallel(styles, scripts)); //attach the functions to tasks\n//You can use CommonJS `exports` module notation to declare tasks, more info here: https://github.com/gulpjs/gulp\n\nexports.clean = clean;\nexports.styles = styles;\nexports.scripts = scripts;\nexports.watch = watch;\nexports.build = build;\nexports[\"default\"] = build;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImd1bHBmaWxlLmJhYmVsLmpzIl0sIm5hbWVzIjpbImd1bHAiLCJyZXF1aXJlIiwic2FzcyIsImNsZWFuQ1NTIiwibm90aWZ5IiwiYmFiZWwiLCJ1Z2xpZnkiLCJjb25jYXQiLCJpbmNsdWRlIiwiZGVsIiwiY29tcGlsZXIiLCJwcm9qZWN0VVJMIiwicGF0aHMiLCJzdHlsZXMiLCJzcmMiLCJkZXN0Iiwid2F0Y2giLCJzY3JpcHRzIiwiY2xlYW4iLCJwaXBlIiwib24iLCJsb2dFcnJvciIsIm1lc3NhZ2UiLCJzb3VyY2VtYXBzIiwiaW5jbHVkZVBhdGhzIiwiX19kaXJuYW1lIiwic2VydmUiLCJidWlsZCIsInNlcmllcyIsInBhcmFsbGVsIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7Ozs7Ozs7QUFTQTtBQUNBLElBQUlBLElBQUksR0FBR0MsT0FBTyxDQUFDLE1BQUQsQ0FBbEI7O0FBQ0EsSUFBSUMsSUFBSSxHQUFHRCxPQUFPLENBQUMsV0FBRCxDQUFsQjs7QUFDQSxJQUFJRSxRQUFRLEdBQUdGLE9BQU8sQ0FBQyxnQkFBRCxDQUF0Qjs7QUFDQSxJQUFJRyxNQUFNLEdBQUdILE9BQU8sQ0FBQyxhQUFELENBQXBCOztBQUNBLElBQUlJLEtBQUssR0FBR0osT0FBTyxDQUFDLFlBQUQsQ0FBbkI7O0FBQ0EsSUFBSUssTUFBTSxHQUFHTCxPQUFPLENBQUMsYUFBRCxDQUFwQjs7QUFDQSxJQUFJTSxNQUFNLEdBQUdOLE9BQU8sQ0FBQyxhQUFELENBQXBCLEMsQ0FDQTs7O0FBQ0EsSUFBSU8sT0FBTyxHQUFHUCxPQUFPLENBQUMsY0FBRCxDQUFyQjs7QUFDQSxJQUFJUSxHQUFHLEdBQUdSLE9BQU8sQ0FBQyxLQUFELENBQWpCOztBQUNBQyxJQUFJLENBQUNRLFFBQUwsR0FBZ0JULE9BQU8sQ0FBQyxXQUFELENBQXZCLEMsQ0FFQTs7QUFDQSxJQUFJVSxVQUFVLEdBQUcsMEJBQWpCLEMsQ0FBNkM7O0FBQzdDLElBQUlDLEtBQUssR0FBRztBQUNYQyxF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anVzdGluLmRpZ2l0YWxfVkFSSUFUSU9OMS8iLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqICAgQ09NTU9OIENPTU1BTkRTXG4gKiAgIGd1bHAgICAgICAgICAgICAgICAgICAgQnVpbGRzIENTUyBhbmQgSlNcbiAqICAgZ3VscCBidWlsZCAgICAgICAgICAgICBCdWlsZHMgQ1NTIGFuZCBKUywgc2FtZSBhcyBndWxwXG4gKiAgIGd1bHAgd2F0Y2ggICAgICAgICAgICAgV2F0Y2hlcyBmb3IgY2hhbmdlcyBhbmQgc3RhcnRzIEJyb3dzZXJTeW5jIG9uIGxvY2FsaG9zdDozMDAwIChDT01JTkcgU09PTilcbiAqICAgZ3VscCBzdHlsZXMgICAgICAgICAgICBCdWlsZHMgQ1NTXG4gKiAgIGd1bHAgc2NyaXB0cyAgICAgICAgICAgQnVpbGQgSlNcbiAqKi9cblxuLy9TRVRVUFxudmFyIGd1bHAgPSByZXF1aXJlKFwiZ3VscFwiKTtcbnZhciBzYXNzID0gcmVxdWlyZShcImd1bHAtc2Fzc1wiKTtcbnZhciBjbGVhbkNTUyA9IHJlcXVpcmUoXCJndWxwLWNsZWFuLWNzc1wiKTtcbnZhciBub3RpZnkgPSByZXF1aXJlKFwiZ3VscC1ub3RpZnlcIik7XG52YXIgYmFiZWwgPSByZXF1aXJlKFwiZ3VscC1iYWJlbFwiKTtcbnZhciB1Z2xpZnkgPSByZXF1aXJlKFwiZ3VscC11Z2xpZnlcIik7XG52YXIgY29uY2F0ID0gcmVxdWlyZShcImd1bHAtY29uY2F0XCIpO1xuLy8gdmFyIGJyb3dzZXJTeW5jID0gcmVxdWlyZSgnYnJvd3Nlci1zeW5jJykuY3JlYXRlKCk7XG52YXIgaW5jbHVkZSA9IHJlcXVpcmUoXCJndWxwLWluY2x1ZGVcIik7XG52YXIgZGVsID0gcmVxdWlyZShcImRlbFwiKTtcbnNhc3MuY29tcGlsZXIgPSByZXF1aXJlKFwibm9kZS1zYXNzXCIpO1xuXG4vL0NPTkZJR1NcbnZhciBwcm9qZWN0VVJMID0gXCJodHRwOi8vdGVzdC1zZXJ2ZXI6ODg4OC9cIjsgLy9jaGFuZ2UgdG8geW91ciBsb2NhbCBkZXYgc2VydmVyIHVybFxudmFyIHBhdGhzID0ge1xuXHRzdHlsZXM6IHtcblx0XHRzcmM6IFwic3JjL3Njc3Mvc3R5bGVzLnNjc3NcIiwgLy9lbnRyeSBwb2ludFxuXHRcdGRlc3Q6IFwiZGlzdC9jc3MvXCIsIC8vZXhpdCBwb2ludFxuXHRcdHdhdGNoOiBcInNyYy9zY3NzLyouc2Nzc1wiLCAvL3BhdGggdG8gd2F0Y2ggZm9yIGNoYW5nZXNcblx0fSxcblx0c2NyaXB0czoge1xuXHRcdHNyYzogXCJzcmMvanMvc2NyaXB0cy5qc1wiLCAvL2VudHJ5IHBvaW50XG5cdFx0ZGVzdDogXCJkaXN0L2pzL1wiLCAvL2V4aXQgcG9pbnRcblx0XHR3YXRjaDogXCJzcmMvanMvKi5qc1wiLCAvL3BhdGggdG8gd2F0Y2ggZm9yIGNoYW5nZXNcblx0fSxcbn07XG5cbmZ1bmN0aW9uIGNsZWFuKCkge1xuXHRyZXR1cm4gZGVsKFtcImRpc3RcIl0pO1xufVxuXG4vL3N0eWxlcyBmdW5jdGlvblxuZnVuY3Rpb24gc3R5bGVzKCkge1xuXHRyZXR1cm4gZ3VscFxuXHRcdC5zcmMocGF0aHMuc3R5bGVzLnNyYylcblx0XHQucGlwZShzYXNzKCkub24oXCJlcnJvclwiLCBzYXNzLmxvZ0Vycm9yKSlcblx0XHQucGlwZShjbGVhbkNTUygpKVxuXHRcdC5waXBlKGNvbmNhdChcInN0eWxlcy5taW4uY3NzXCIpKVxuXHRcdC5waXBlKGd1bHAuZGVzdChwYXRocy5zdHlsZXMuZGVzdCkpXG5cdFx0LnBpcGUoXG5cdFx0XHRub3RpZnkoe1xuXHRcdFx0XHRtZXNzYWdlOiBcIlN0eWxlcyB0YXNrIGNvbXBsZXRlXCIsXG5cdFx0XHR9KVxuXHRcdCk7XG59XG5cbi8vc2NyaXB0cyBmdW5jdGlvblxuZnVuY3Rpb24gc2NyaXB0cygpIHtcblx0cmV0dXJuIGd1bHBcblx0XHQuc3JjKHBhdGhzLnNjcmlwdHMuc3JjLCB7IHNvdXJjZW1hcHM6IGZhbHNlIH0pXG5cdFx0LnBpcGUoXG5cdFx0XHRpbmNsdWRlKHtcblx0XHRcdFx0aW5jbHVkZVBhdGhzOiBbX19kaXJuYW1lICsgXCIvbm9kZV9tb2R1bGVzXCJdLFxuXHRcdFx0fSlcblx0XHQpXG5cdFx0LnBpcGUoYmFiZWwoKSlcblx0XHQucGlwZSh1Z2xpZnkoKSlcblx0XHQucGlwZShjb25jYXQoXCJzY3JpcHRzLm1pbi5qc1wiKSlcblx0XHQucGlwZShndWxwLmRlc3QocGF0aHMuc2NyaXB0cy5kZXN0KSlcblx0XHQucGlwZShcblx0XHRcdG5vdGlmeSh7XG5cdFx0XHRcdG1lc3NhZ2U6IFwiU2NyaXB0cyB0YXNrIGNvbXBsZXRlXCIsXG5cdFx0XHR9KVxuXHRcdCk7XG59XG5cbi8vd2F0Y2ggZnVuY3Rpb25cbmZ1bmN0aW9uIHdhdGNoKCkge1xuXHRndWxwLndhdGNoKHBhdGhzLnNjcmlwdHMud2F0Y2gsIHNjcmlwdHMpO1xuXHRndWxwLndhdGNoKHBhdGhzLnN0eWxlcy53YXRjaCwgc3R5bGVzKTtcbn1cblxuLy9zZXJ2ZSBmdW5jdGlvblxuZnVuY3Rpb24gc2VydmUoKSB7XG5cdC8vYnJvd3NlclN5bmMgU1RVRkZcblx0Ly9wcm9qZWN0VVJMIFNUVUZGXG59XG5cbi8vYnVpbGQgZnVuY3Rpb25cbnZhciBidWlsZCA9IGd1bHAuc2VyaWVzKGNsZWFuLCBndWxwLnBhcmFsbGVsKHN0eWxlcywgc2NyaXB0cykpO1xuXG4vL2F0dGFjaCB0aGUgZnVuY3Rpb25zIHRvIHRhc2tzXG4vL1lvdSBjYW4gdXNlIENvbW1vbkpTIGBleHBvcnRzYCBtb2R1bGUgbm90YXRpb24gdG8gZGVjbGFyZSB0YXNrcywgbW9yZSBpbmZvIGhlcmU6IGh0dHBzOi8vZ2l0aHViLmNvbS9ndWxwanMvZ3VscFxuZXhwb3J0cy5jbGVhbiA9IGNsZWFuO1xuZXhwb3J0cy5zdHlsZXMgPSBzdHlsZXM7XG5leHBvcnRzLnNjcmlwdHMgPSBzY3JpcHRzO1xuZXhwb3J0cy53YXRjaCA9IHdhdGNoO1xuZXhwb3J0cy5idWlsZCA9IGJ1aWxkO1xuZXhwb3J0cy5kZWZhdWx0ID0gYnVpbGQ7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "gulpfile.babel.js"
      ],
      "names": [
        "gulp",
        "require",
        "sass",
        "cleanCSS",
        "notify",
        "babel",
        "uglify",
        "concat",
        "include",
        "del",
        "compiler",
        "projectURL",
        "paths",
        "styles",
        "src",
        "dest",
        "watch",
        "scripts",
        "clean",
        "pipe",
        "on",
        "logError",
        "message",
        "sourcemaps",
        "includePaths",
        "__dirname",
        "serve",
        "build",
        "series",
        "parallel",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/justintew/Desktop/justin.digital_VARIATION1/",
      "sourcesContent": [
        "/**\n *   COMMON COMMANDS\n *   gulp                   Builds CSS and JS\n *   gulp build             Builds CSS and JS, same as gulp\n *   gulp watch             Watches for changes and starts BrowserSync on localhost:3000 (COMING SOON)\n *   gulp styles            Builds CSS\n *   gulp scripts           Build JS\n **/\n\n//SETUP\nvar gulp = require(\"gulp\");\nvar sass = require(\"gulp-sass\");\nvar cleanCSS = require(\"gulp-clean-css\");\nvar notify = require(\"gulp-notify\");\nvar babel = require(\"gulp-babel\");\nvar uglify = require(\"gulp-uglify\");\nvar concat = require(\"gulp-concat\");\n// var browserSync = require('browser-sync').create();\nvar include = require(\"gulp-include\");\nvar del = require(\"del\");\nsass.compiler = require(\"node-sass\");\n\n//CONFIGS\nvar projectURL = \"http://test-server:8888/\"; //change to your local dev server url\nvar paths = {\n\tstyles: {\n\t\tsrc: \"src/scss/styles.scss\", //entry point\n\t\tdest: \"dist/css/\", //exit point\n\t\twatch: \"src/scss/*.scss\", //path to watch for changes\n\t},\n\tscripts: {\n\t\tsrc: \"src/js/scripts.js\", //entry point\n\t\tdest: \"dist/js/\", //exit point\n\t\twatch: \"src/js/*.js\", //path to watch for changes\n\t},\n};\n\nfunction clean() {\n\treturn del([\"dist\"]);\n}\n\n//styles function\nfunction styles() {\n\treturn gulp\n\t\t.src(paths.styles.src)\n\t\t.pipe(sass().on(\"error\", sass.logError))\n\t\t.pipe(cleanCSS())\n\t\t.pipe(concat(\"styles.min.css\"))\n\t\t.pipe(gulp.dest(paths.styles.dest))\n\t\t.pipe(\n\t\t\tnotify({\n\t\t\t\tmessage: \"Styles task complete\",\n\t\t\t})\n\t\t);\n}\n\n//scripts function\nfunction scripts() {\n\treturn gulp\n\t\t.src(paths.scripts.src, { sourcemaps: false })\n\t\t.pipe(\n\t\t\tinclude({\n\t\t\t\tincludePaths: [__dirname + \"/node_modules\"],\n\t\t\t})\n\t\t)\n\t\t.pipe(babel())\n\t\t.pipe(uglify())\n\t\t.pipe(concat(\"scripts.min.js\"))\n\t\t.pipe(gulp.dest(paths.scripts.dest))\n\t\t.pipe(\n\t\t\tnotify({\n\t\t\t\tmessage: \"Scripts task complete\",\n\t\t\t})\n\t\t);\n}\n\n//watch function\nfunction watch() {\n\tgulp.watch(paths.scripts.watch, scripts);\n\tgulp.watch(paths.styles.watch, styles);\n}\n\n//serve function\nfunction serve() {\n\t//browserSync STUFF\n\t//projectURL STUFF\n}\n\n//build function\nvar build = gulp.series(clean, gulp.parallel(styles, scripts));\n\n//attach the functions to tasks\n//You can use CommonJS `exports` module notation to declare tasks, more info here: https://github.com/gulpjs/gulp\nexports.clean = clean;\nexports.styles = styles;\nexports.scripts = scripts;\nexports.watch = watch;\nexports.build = build;\nexports.default = build;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1591750000831
  }
}